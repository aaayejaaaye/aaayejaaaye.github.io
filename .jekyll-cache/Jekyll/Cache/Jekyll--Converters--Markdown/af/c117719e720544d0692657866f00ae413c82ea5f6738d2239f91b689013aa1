I"ï<p><img src="\pictures\tencommandments\badtime (2).jpg" style="margin-left:auto; margin-right:auto; display:block;" />
Ah yes, Unity, Throughout the years of being an aspiring game developer/CS graduate/billionaire/philanthropist(ehehe) I have followed hundreds of Unity tutorials. I would consider myself an intermediate beginner as a Unity user however, I find that I can still find some real quality intro Unity tutorials that I can benefit from(usually not free). If you look up Unity 3D/Game Development or any other popular keywords for aspiring game makers in an analytics tool you will see that the results are both highly sought after and alsoâ€¦ highly saturated (Iâ€™m a small fish in a big pond).<!--more--> So mulling through these results and finding the right tutorial that wont waste your time is essential in the beginning stages of you game making journey. Having said that, I have learned a few things about the DOâ€™s and DONTâ€™S of trying to follow along. If you are looking for some basic Unity tutorials check out my <a href="/2019/11/14/Best-Unity-Tutorials-For-Beginners-2019.html">Best Unity Tutorials for Beginners in 2019</a>Â  So without further ado, Here are the 10 Commandments for beginners following a Unity tutorial online:</p>

<p><img src="\pictures\scroll.jpg" width="400" height="350" style="margin-left:auto; margin-right:auto; display:block;" /></p>

<ol>
  <li>Thou Shalt Observe the Unity version Number</li>
  <li>Thou Shalt google endless until a fix is found to a console Error</li>
  <li>Thou Shalt name the scripts to match the project and in the IDE</li>
  <li>Thou Shalt Learn the Editor Before Learning the Scripting</li>
  <li>Thou shalt have Patience</li>
  <li>Thou Shalt Utilize the Asset Store</li>
  <li>Thou Shalt Use the Search API feature in VS</li>
  <li>Thou Shalt Align Empty Game objects with origin</li>
  <li>Thou Shalt Always double check the configurations and the player settings</li>
  <li>Thou Shalt utilize forums and documentation</li>
</ol>

<p><strong>Thou Shalt Observe the Unity version Number</strong>
As a beginner you may not realize that Unity Projects are not backwards compatible and that the layout/configurations and capabilities of Unity projects vary greatly between major version releases. If you are opening a Unity project that was created and save as a different version, a notification will appear and warn you that this could be troublesome. I would say for official Unity tutorials this may not be a problem but there are a lot of tutorials out there that are extremely dated and will be hard to follow if you dont already understand Unity essentials.</p>

<p>In these two pictures you can see that I am currently using Unity 2019.2.0f1.
Major releases are a new year ex. 2017.x.x or 2018.x.x</p>

<p>There are two ways to check which Unity version you own(and you may own several) one way is in the Unity Hub under Installs:
<img src="\pictures\tencommandments\unityversion.png" /></p>

<p>The other is once you have opened a Unity Project in the top left corner:
<img src="\pictures\tencommandments\inituversion2.png" /></p>

<p><em>tip: if you donâ€™t see and explicit 20xx.x.x version than the tutorial is in a much older version(usually unity 5&gt;) as  a newbie it might be best to avoid these older ones)</em></p>

<p>Its the tutorials the have a major release differences from your own version that you want to avoid.</p>

<p><em>tip (Import the Project as assets or as a unity package)</em></p>

<p><strong>Thou Shalt google endless until a fix is found to a console Error</strong></p>

<p>Those console errors suck. Fortunately a lot of them are common and easy to find answers too. The fastest easiest way to research an error is to copy the exact error output from the console and search it verbatim on the web. Stack Overflow and Unity forum usually the results needed to resolve most issues.</p>

<p><strong>Thou Shalt name the scripts to match the project and in the IDE</strong></p>

<p><img src="\pictures\tencommandments\cantaddscript.png" />
One sort of trivial mistake I made when I was first starting with scripting in Unity was learning to understand the relationship between Unity and Visual Studio. I very Common mistake is Remnaming a class in visual studio only to realize back in the editor the console is throwing an error about my scripts.</p>

<p><img src="\pictures\tencommandments\Inkedsampleerror_LI.jpg" /></p>

<p>Observe. In the upper left the name of the class does not match the class name in the actual script. Thy have to match or your going to have a bad time.</p>

<p><strong>Thou Shalt Learn the Editor Before Learning the Scripting</strong></p>

<p><strong>Thou shalt have Patience</strong></p>

<p><strong>Thou Shalt Utilize the Asset Store</strong></p>

<p><strong>Thou Shalt Use the Search API feature in VS</strong></p>

<p><strong>Thou Shalt Align Empty Game objects with origin</strong></p>

<p><strong>Thou Shalt Always double check the configurations and the player settings</strong></p>

<p><strong>Thou Shalt utilize forums and documentation</strong></p>
:ET